generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model owners {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamp(6)

  user_id    String  @unique(map: "owners_user_id") @db.VarChar(255)
  admin_flag Boolean @default(false)

  owner_details_id Int?           @unique(map: "owner_details_id")
  owner_details    owner_details? @relation(fields: [owner_details_id], references: [id], onDelete: Cascade, map: "owner_details_fk")

  tags tags[]
}

model owner_details {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamp(6)

  owner_firstname     String @db.VarChar(255)
  owner_lastname      String @db.VarChar(255)
  owner_phone_number  String @db.VarChar(255)
  owner_address_line1 String @db.VarChar(255)
  owner_address_line2 String @db.VarChar(255)
  owner_address_zip   String @db.VarChar(255)

  owner owners?
}

model tags {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamp(6)

  registered Boolean @default(false)
  TAG_TOKEN  String  @unique(map: "tag_token") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  setup_key  String  @unique(map: "tag_setup_key") @default(dbgenerated("concat(concat(upper(LEFT(REGEXP_REPLACE(md5(random()::text),'[[:digit:]]','','g'), 4)), '-'), concat(concat(floor(random() * (9-0+1) + 0)::int, floor(random() * (9-0+1) + 0)::int), floor(random() * (9-0+1) + 0)::int))")) @db.VarChar(13)

  owner_id       Int?
  owner          owners?      @relation(fields: [owner_id], references: [id], onDelete: Cascade, map: "owner_fk")
  tag_details_id Int?         @unique(map: "tag_details_id")
  tag_details    tag_details? @relation(fields: [tag_details_id], references: [id], onDelete: Cascade, map: "tag_details_fk")
}

model tag_details {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamp(6)

  pets_name               String  @db.VarChar(255)
  pets_photo_url          String  @db.VarChar(255)
  pets_information        String  @db.Text()
  uses_owners_information Boolean @default(false)

  tag_owners_name   String? @db.VarChar(255)
  tag_phone_number  String? @db.VarChar(255)
  tag_address_line1 String? @db.VarChar(255)
  tag_address_line2 String? @db.VarChar(255)
  tag_address_zip   String? @db.VarChar(255)

  tag tags?
}

// LEFT(md5(random()::text), 3)
